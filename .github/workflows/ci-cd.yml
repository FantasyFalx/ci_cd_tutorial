name: Build and Deploy to Cloud Run

on:
  push:
    branches: [ main ]

# Environment var

env:
  PROJECT_ID: cicd-test-436421 # TODO: update Google Cloud project id
  GAR_LOCATION: us-east4 # TODO: update Artifact Registry location
  REPOSITORY: test-repo # TODO: update Artifact Registry repository name
  SERVICE: test-flask-app # TODO: update Cloud Run service name
  REGION: us-east1 # TODO: update Cloud Run service region

jobs:
  test-build-deploy:
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Tests:
      - name: Set up Python 
      # Version of the action for setting up python, not Python Version
        uses: actions/setup-python@v5
        with:
            # Semantic version range syntax or exact version of a python version
          python-version: '3.12.x'
      # Installs the requirements of the file
      - name: Install dependencies
        run: | 
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      # Testing code with pytest
      - name: Test with pytest
        run: | 
          pip install pytest pytest-cov
          pytest tests

    # Adding a new comment for test purposes
    # Adding a new comment for test purposes
    # Adding a new comment of lightweight test tag purposes

      # Google Authentication
      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      # BEGIN - Docker auth and build (NOTE: If you already have a container image, these Docker steps can be omitted)

      # Authenticate Docker to Google Cloud Artifact Registry
      - name: Docker Auth
        run: |-
          gcloud auth configure-docker "${{ env.GAR_LOCATION }}-docker.pkg.dev"
      
      # Chapt gpt solution describe what its doing with notes
      # added a note, added another note 
      # added another note.
      # Added another note
      - name: Git tag call
        run: |-
          git fetch --tags
          GIT_TAG=$(git describe --tags --abbrev=0)
          echo "GIT_TAG=$GIT_TAG" >> $GITHUB_ENV
        # Gets the most recent annotated tag

      # Build and Push Container 
      - name: Build and Push Container 
        # Setting up th git tag for the version identifier
        env:
          GIT_TAG: $VERSION_TAG
        run: |-
          docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}" ./
          docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}:${{ env.GIT_TAG }}"
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}"
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}:${{ env.GIT_TAG }}"


      # END - Docker auth and build

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          image: "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}"

      # If required, use the Cloud Run url output in later steps
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
