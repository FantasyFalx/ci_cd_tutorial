# File for deployment from Docker to Google Cloud
# With build
name: Google Cloud Deploy


# Defines what branch the yaml file will activate on
on:
  push:
    branches: [ main ]

jobs:
  build-push-gcr:
    name: Build and Push to GCP
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: cicd-test-436421
      IMAGE_NAME: test-image
      GAR_LOCATION: us-east4
      REPOSITORY: cicd-testrepo
      SERVICE: cicd-test
      REGION: us-east4
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4


    # Authenticate to google cloud was never authenticated
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.SERVICE_ACCOUNT_KEY }}

    # Part for the Google Cloud image configuration, pulled from git secret keys
    - uses: google-github-actions/setup-gcloud@v1 # Update to v1
      with:
        service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }}
        project_id: ${{ env.PROJECT_ID }}  # Use secrets for project ID too
        export_default_credentials: true

     # Creating a docker image from current dir
    - name: Build Docker Image
      run: docker build -t $IMAGE_NAME:latest .

    - name: Configure Docker Client
      run: |-
        gcloud auth configure-docker --quiet

  # Push the image to conatiner registry on google cloud
    - name: Push Docker Image to Container Registry (GCR)
      # Fo some rea
      env:
        GIT_TAG: v0.1.0
      run: |-
        docker tag $IMAGE_NAME:latest $REPOSITORY/$PROJECT_ID/test-image:latest
        docker tag $IMAGE_NAME:latest $REPOSITORY/$PROJECT_ID/test-image:$GIT_TAG
        docker push $REPOSITORY/$PROJECT_ID/$IMAGE_NAME:latest
        docker push $REPOSITORY/$PROJECT_ID/$IMAGE_NAME:$GIT_TAG


  # Push the image to the cloud run for it to be posted to the web

    - name: Deploy to Cloud Run
      id: deploy
      uses: google-github-actions/deploy-cloudrun@v0
      with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          # NOTE: If using a pre-built image, update the image name here
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}
          # NOTE: You can also set env variables here:
          #  env_vars: |
          #  NODE_ENV=production
          #  TOKEN_EXPIRE=6400